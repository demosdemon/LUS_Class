//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthwindTraders.MVC5.NorthwindServiceClasses {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category_DTO", Namespace="http://schemas.datacontract.org/2004/07/NorthwindTraders.WCF.DTOS")]
    [System.SerializableAttribute()]
    public partial class Category_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_DTO", Namespace="http://schemas.datacontract.org/2004/07/NorthwindTraders.WCF.DTOS")]
    [System.SerializableAttribute()]
    public partial class Product_DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NorthwindServiceClasses.INorthwindContract")]
    public interface INorthwindContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindContract/ReadAllCategories", ReplyAction="http://tempuri.org/INorthwindContract/ReadAllCategoriesResponse")]
        System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Category_DTO> ReadAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindContract/ReadAllCategories", ReplyAction="http://tempuri.org/INorthwindContract/ReadAllCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Category_DTO>> ReadAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindContract/ReadProductsByCategory", ReplyAction="http://tempuri.org/INorthwindContract/ReadProductsByCategoryResponse")]
        System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Product_DTO> ReadProductsByCategory(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindContract/ReadProductsByCategory", ReplyAction="http://tempuri.org/INorthwindContract/ReadProductsByCategoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Product_DTO>> ReadProductsByCategoryAsync(int categoryID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INorthwindContractChannel : NorthwindTraders.MVC5.NorthwindServiceClasses.INorthwindContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NorthwindContractClient : System.ServiceModel.ClientBase<NorthwindTraders.MVC5.NorthwindServiceClasses.INorthwindContract>, NorthwindTraders.MVC5.NorthwindServiceClasses.INorthwindContract {
        
        public NorthwindContractClient() {
        }
        
        public NorthwindContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NorthwindContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Category_DTO> ReadAllCategories() {
            return base.Channel.ReadAllCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Category_DTO>> ReadAllCategoriesAsync() {
            return base.Channel.ReadAllCategoriesAsync();
        }
        
        public System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Product_DTO> ReadProductsByCategory(int categoryID) {
            return base.Channel.ReadProductsByCategory(categoryID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<NorthwindTraders.MVC5.NorthwindServiceClasses.Product_DTO>> ReadProductsByCategoryAsync(int categoryID) {
            return base.Channel.ReadProductsByCategoryAsync(categoryID);
        }
    }
}
